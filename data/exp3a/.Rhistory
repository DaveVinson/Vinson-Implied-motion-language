library(ggplot2)
library(scales)
means = summaryBy(newx ~ cc,  data = results,
FUN = function(x) { c(m = mean(x), s = stderr(x)) } ) #-mean for exp 2?
means$x = c(2,5,6,1,3,4)
means$cc <- factor(means$cc, levels = means$cc[order(-means$x)])
ggplot(data=means,aes(newx.m,cc))+
geom_point()+
geom_errorbarh(aes(xmin=newx.m-newx.s,xmax=newx.m+newx.s,height=.5))+
geom_vline(xintercept=c(0), linetype="dotted")+
theme_bw()+
ggtitle("Experiment One")+
#ggtitle("Experiment One")+
xlab("Gravity Dimension") +
ylab("Condition") +
annotate("text", x = 0,y=1, label = "Actual")
means = summaryBy(-newx ~ cc,  data = results,
FUN = function(x) { c(m = mean(x), s = stderr(x)) } ) #-mean for exp 2?
means$x = c(2,5,6,1,3,4)
means$cc <- factor(means$cc, levels = means$cc[order(-means$x)])
ggplot(data=means,aes(newx.m,cc))+
geom_point()+
geom_errorbarh(aes(xmin=newx.m-newx.s,xmax=newx.m+newx.s,height=.5))+
geom_vline(xintercept=c(0), linetype="dotted")+
theme_bw()+
ggtitle("Experiment One")+
#ggtitle("Experiment One")+
xlab("Gravity Dimension") +
ylab("Condition") +
annotate("text", x = 0,y=1, label = "Actual")
#
means = summaryBy(newx ~ cc,  data = results,
FUN = function(x) { c(m = mean(x), s = stderr(x)) } ) #-mean for exp 2?
means$x = c(2,5,6,1,3,4)
means$cc <- factor(means$cc, levels = means$cc[order(means$x)])
ggplot(data=means,aes(newx.m,cc))+
geom_point()+
geom_errorbarh(aes(xmin=newx.m-newx.s,xmax=newx.m+newx.s,height=.5))+
geom_vline(xintercept=c(0), linetype="dotted")+
theme_bw()+
ggtitle("Experiment One")+
#ggtitle("Experiment One")+
xlab("Gravity Dimension") +
ylab("Condition") +
annotate("text", x = 0,y=1, label = "Actual")
means = summaryBy(newx ~ cc,  data = results,
FUN = function(x) { c(m = mean(-x), s = stderr(x)) } ) #-mean for exp 2?
means$x = c(2,5,6,1,3,4)
means$cc <- factor(means$cc, levels = means$cc[order(-means$x)])
ggplot(data=means,aes(newx.m,cc))+
geom_point()+
geom_errorbarh(aes(xmin=newx.m-newx.s,xmax=newx.m+newx.s,height=.5))+
geom_vline(xintercept=c(0), linetype="dotted")+
theme_bw()+
ggtitle("Experiment One")+
#ggtitle("Experiment One")+
xlab("Gravity Dimension") +
ylab("Condition") +
annotate("text", x = 0,y=1, label = "Actual")
results$newx = -(results$newx-(410/cv))#exp2
means = summaryBy(newx ~ cc,  data = results,
FUN = function(x) { c(m = mean(x), s = stderr(x)) } ) #-mean for exp 2?
means$x = c(2,5,6,1,3,4)
means$cc <- factor(means$cc, levels = means$cc[order(-means$x)])
ggplot(data=means,aes(newx.m,cc))+
geom_point()+
geom_errorbarh(aes(xmin=newx.m-newx.s,xmax=newx.m+newx.s,height=.5))+
geom_vline(xintercept=c(0), linetype="dotted")+
theme_bw()+
ggtitle("Experiment One")+
#ggtitle("Experiment One")+
xlab("Gravity Dimension") +
ylab("Condition") +
annotate("text", x = 0,y=1, label = "Actual")
### functions ###
stderr <- function(x) sqrt(var(x,na.rm=TRUE)/length(na.omit(x)))
deg2rad <- function(deg) {(deg * pi) / (180)}
# rm(list=ls()) #clear variables
############################################################################
############ Data loading ##################################################
############################################################################
setwd('~/Documents/projects/Vinson_etal_zwaan/Analysis/exp1/exp1_data/')
files <- list.files(pattern = "[.]txt$")
results = data.frame(run=1:length(files),sub=0,x=0,y=0,conf=0,rt=0,dir=0,lang=0,sent=0,xi=0,yi=0)
for (run in 1:length(files)){
print(run)
file <- read.delim(files[run], sep="\t", header=FALSE)
results[run,]$rt = tail(file)[6,2]
results[run,]$sub=as.numeric(as.character(unlist(file[2,]$V1)))
results[run,]$x=as.numeric(unlist(file[2,]$V2))
results[run,]$y=as.numeric(unlist(file[2,]$V3))
results[run,]$conf=as.numeric(unlist(file[2,]$V4))
results[run,]$lang=as.character(unlist(file[2,]$V5))
results[run,]$dir=as.character(unlist(file[2,]$V6))
results[run,]$sent=as.character(unlist(file[2,]$V7))
}
#########combined for new analysis
ex1 = results
setwd('~/Documents/projects/Vinson_etal_zwaan/Analysis/exp3/3a/')
files <- list.files(pattern = "[.]txt$")
results = data.frame(run=1:length(files),sub=0,x=0,y=0,conf=0,rt=0,dir=0,lang=0,sent=0,xi=0,yi=0)
for (run in 1:length(files)){
print(run)
file <- read.delim(files[run], sep="\t", header=FALSE)
results[run,]$rt = tail(file)[6,2]
results[run,]$sub=as.numeric(as.character(unlist(file[2,]$V1)))
results[run,]$x=as.numeric(unlist(file[2,]$V2))
results[run,]$y=as.numeric(unlist(file[2,]$V3))
results[run,]$conf=as.numeric(unlist(file[2,]$V4))
results[run,]$lang=as.character(unlist(file[2,]$V5))
results[run,]$dir=as.character(unlist(file[2,]$V6))
results[run,]$sent=as.character(unlist(file[2,]$V7))
}
ex3a = results
sumx2 = rbind(ex1,ex3a)
cv = cos(20*pi/180)
cv
for (i in 1:nrow(results)){
results$newx  = (-results$x)/cv
}
results = results[results$rt<90000,] #remove all data that takes more than 25s to complete
upper=mean(results$rt)+(3*(sd(results$rt)))
lower=mean(results$rt)-(3*(sd(results$rt)))
test = results[results$rt<upper,]
results=test[test$rt>lower,]
upper=mean(results$conf)+(3*(sd(results$conf)))
lower=mean(results$conf)-(3*(sd(results$conf)))
test = results[results$conf<upper,]
results=test[test$conf>lower,] ##### convienent of confidence doesn't result in any dropped data.
upper=mean(results$newx)+(3*(sd(results$newx)))
lower=mean(results$newx)-(3*(sd(results$newx)))
test = results[results$newx<upper,]
results=test[test$newx>lower,]
results$newx = results$newx-(410/cv)#exp2
results$cc = 0
results[results$lang=="forward" & results$dir=="up",]$cc="Forward-Up"
results[results$lang=="forward" & results$dir=="down",]$cc="Forward-Down"
results[results$lang=="backward" & results$dir=="up",]$cc="Backward-Up"
results[results$lang=="backward" & results$dir=="down",]$cc="Backward-Down"
results[results$lang=="Null" & results$dir=="up",]$cc="No Lang-Up"
results[results$lang=="Null" & results$dir=="down",]$cc="No Lang-Down"
library(doBy)
library(ggplot2)
library(scales)
means = summaryBy(newx ~ cc,  data = results,
FUN = function(x) { c(m = mean(x), s = stderr(x)) } ) #-mean for exp 2?
means$x = c(2,5,6,1,3,4)
means$cc <- factor(means$cc, levels = means$cc[order(-means$x)])
ggplot(data=means,aes(newx.m,cc))+
geom_point()+
geom_errorbarh(aes(xmin=newx.m-newx.s,xmax=newx.m+newx.s,height=.5))+
geom_vline(xintercept=c(0), linetype="dotted")+
theme_bw()+
ggtitle("Experiment One")+
#ggtitle("Experiment One")+
xlab("Gravity Dimension") +
ylab("Condition") +
annotate("text", x = 0,y=1, label = "Actual")
results$newx  = (results$x)/cv
for (i in 1:nrow(results)){
results$newx  = (results$x)/cv
}
library(phia)
library(lsr)
### functions ###
stderr <- function(x) sqrt(var(x,na.rm=TRUE)/length(na.omit(x)))
deg2rad <- function(deg) {(deg * pi) / (180)}
setwd('~/Documents/projects/Vinson_etal_zwaan/Analysis/exp1/exp1_data/')
files <- list.files(pattern = "[.]txt$")
results = data.frame(run=1:length(files),sub=0,x=0,y=0,conf=0,rt=0,dir=0,lang=0,sent=0,xi=0,yi=0)
for (run in 1:length(files)){
print(run)
file <- read.delim(files[run], sep="\t", header=FALSE)
results[run,]$rt = tail(file)[6,2]
results[run,]$sub=as.numeric(as.character(unlist(file[2,]$V1)))
results[run,]$x=as.numeric(unlist(file[2,]$V2))
results[run,]$y=as.numeric(unlist(file[2,]$V3))
results[run,]$conf=as.numeric(unlist(file[2,]$V4))
results[run,]$lang=as.character(unlist(file[2,]$V5))
results[run,]$dir=as.character(unlist(file[2,]$V6))
results[run,]$sent=as.character(unlist(file[2,]$V7))
}
#########combined for new analysis
ex1 = results
setwd('~/Documents/projects/Vinson_etal_zwaan/Analysis/exp3/3b/')
files <- list.files(pattern = "[.]txt$")
results = data.frame(run=1:length(files),sub=0,x=0,y=0,conf=0,rt=0,dir=0,lang=0,sent=0,xi=0,yi=0)
for (run in 1:length(files)){
print(run)
file <- read.delim(files[run], sep="\t", header=FALSE)
results[run,]$rt = tail(file)[6,2]
results[run,]$sub=as.numeric(as.character(unlist(file[2,]$V1)))
results[run,]$x=as.numeric(unlist(file[2,]$V2))
results[run,]$y=as.numeric(unlist(file[2,]$V3))
results[run,]$conf=as.numeric(unlist(file[2,]$V4))
results[run,]$lang=as.character(unlist(file[2,]$V5))
results[run,]$dir=as.character(unlist(file[2,]$V6))
results[run,]$sent=as.character(unlist(file[2,]$V7))
}
#########combined for new analysis
ex3a = results
sumx2 = rbind(ex1,ex3a)
summary(sumx2)
results = sumx2
cv = cos(20*pi/180)
#run for all experiments
for (i in 1:nrow(results)){
results$newx  = (results$x)/cv
}
results = results[results$rt<90000,] #remove all data that takes more than 25s to complete
upper=mean(results$rt)+(3*(sd(results$rt)))
lower=mean(results$rt)-(3*(sd(results$rt)))
test = results[results$rt<upper,]
results=test[test$rt>lower,]
upper=mean(results$conf)+(3*(sd(results$conf)))
lower=mean(results$conf)-(3*(sd(results$conf)))
test = results[results$conf<upper,]
results=test[test$conf>lower,] ##### convienent of confidence doesn't result in any dropped data.
upper=mean(results$newx)+(3*(sd(results$newx)))
lower=mean(results$newx)-(3*(sd(results$newx)))
test = results[results$newx<upper,]
results=test[test$newx>lower,]
results$newx = results$newx-(410/cv)#exp2
results$cc = 0
results[results$lang=="forward" & results$dir=="up",]$cc="Forward-Up"
results[results$lang=="forward" & results$dir=="down",]$cc="Forward-Down"
results[results$lang=="backward" & results$dir=="up",]$cc="Backward-Up"
results[results$lang=="backward" & results$dir=="down",]$cc="Backward-Down"
results[results$lang=="Null" & results$dir=="up",]$cc="No Lang-Up"
results[results$lang=="Null" & results$dir=="down",]$cc="No Lang-Down"
library(doBy)
library(ggplot2)
library(scales)
means = summaryBy(newx ~ cc,  data = results,
FUN = function(x) { c(m = mean(x), s = stderr(x)) } ) #-mean for exp 2?
means$x = c(2,5,6,1,3,4)
means$cc <- factor(means$cc, levels = means$cc[order(-means$x)])
ggplot(data=means,aes(newx.m,cc))+
geom_point()+
geom_errorbarh(aes(xmin=newx.m-newx.s,xmax=newx.m+newx.s,height=.5))+
geom_vline(xintercept=c(0), linetype="dotted")+
theme_bw()+
ggtitle("Experiment One")+
#ggtitle("Experiment One")+
xlab("Gravity Dimension") +
ylab("Condition") +
annotate("text", x = 0,y=1, label = "Actual")
library(phia)
library(lsr)
### functions ###
stderr <- function(x) sqrt(var(x,na.rm=TRUE)/length(na.omit(x)))
deg2rad <- function(deg) {(deg * pi) / (180)}
# rm(list=ls()) #clear variables
setwd('~/Documents/projects/Vinson_etal_zwaan/Analysis/exp2/exp2_data/')
files <- list.files(pattern = "[.]txt$")
results = data.frame(run=1:length(files),sub=0,x=0,y=0,conf=0,rt=0,dir=0,lang=0,sent=0,xi=0,yi=0)
for (run in 1:length(files)){
print(run)
file <- read.delim(files[run], sep="\t", header=FALSE)
results[run,]$rt = tail(file)[6,2]
results[run,]$sub=as.numeric(as.character(unlist(file[2,]$V1)))
results[run,]$x=as.numeric(unlist(file[2,]$V2))
results[run,]$y=as.numeric(unlist(file[2,]$V3))
results[run,]$conf=as.numeric(unlist(file[2,]$V4))
results[run,]$lang=as.character(unlist(file[2,]$V5))
results[run,]$dir=as.character(unlist(file[2,]$V6))
results[run,]$sent=as.character(unlist(file[2,]$V7))
}
ex1 = results
setwd('~/Documents/projects/Vinson_etal_zwaan/Analysis/exp3/3b/')
files <- list.files(pattern = "[.]txt$")
results = data.frame(run=1:length(files),sub=0,x=0,y=0,conf=0,rt=0,dir=0,lang=0,sent=0,xi=0,yi=0)
for (run in 1:length(files)){
print(run)
file <- read.delim(files[run], sep="\t", header=FALSE)
results[run,]$rt = tail(file)[6,2]
results[run,]$sub=as.numeric(as.character(unlist(file[2,]$V1)))
results[run,]$x=as.numeric(unlist(file[2,]$V2))
results[run,]$y=as.numeric(unlist(file[2,]$V3))
results[run,]$conf=as.numeric(unlist(file[2,]$V4))
results[run,]$lang=as.character(unlist(file[2,]$V5))
results[run,]$dir=as.character(unlist(file[2,]$V6))
results[run,]$sent=as.character(unlist(file[2,]$V7))
}
ex3a = results
sumx2 = rbind(ex1,ex3a)
summary(sumx2)
results = sumx2
View(results)
cv = cos(20*pi/180)
results$ny =  results$y +169.22
410/cv
#run for all experiments
for (i in 1:nrow(results)){
results$newx  = (results$x)/cv
}
results = results[results$rt<90000,] #remove all data that takes more than 25s to complete
upper=mean(results$rt)+(3*(sd(results$rt)))
lower=mean(results$rt)-(3*(sd(results$rt)))
test = results[results$rt<upper,]
results=test[test$rt>lower,]
upper=mean(results$conf)+(3*(sd(results$conf)))
lower=mean(results$conf)-(3*(sd(results$conf)))
test = results[results$conf<upper,]
results=test[test$conf>lower,] ##### convienent of confidence doesn't result in any dropped data.
upper=mean(results$newx)+(3*(sd(results$newx)))
lower=mean(results$newx)-(3*(sd(results$newx)))
test = results[results$newx<upper,]
results=test[test$newx>lower,]
results$newx = results$newx-(410/cv)#exp2
# trim appropriately before running analyses/breaking into sep conditions. x and y seperately.
results$cc = 0
results[results$lang=="forward" & results$dir=="up",]$cc="Forward-Up"
results[results$lang=="forward" & results$dir=="down",]$cc="Forward-Down"
results[results$lang=="backward" & results$dir=="up",]$cc="Backward-Up"
results[results$lang=="backward" & results$dir=="down",]$cc="Backward-Down"
results[results$lang=="Null" & results$dir=="up",]$cc="No Lang-Up"
results[results$lang=="Null" & results$dir=="down",]$cc="No Lang-Down"
library(doBy)
library(ggplot2)
library(scales)
means = summaryBy(newx ~ cc,  data = results,
FUN = function(x) { c(m = mean(x), s = stderr(x)) } ) #-mean for exp 2?
means$x = c(2,5,6,1,3,4)
means$cc <- factor(means$cc, levels = means$cc[order(-means$x)])
ggplot(data=means,aes(newx.m,cc))+
geom_point()+
geom_errorbarh(aes(xmin=newx.m-newx.s,xmax=newx.m+newx.s,height=.5))+
geom_vline(xintercept=c(0), linetype="dotted")+
theme_bw()+
ggtitle("Experiment One")+
#ggtitle("Experiment One")+
xlab("Gravity Dimension") +
ylab("Condition") +
annotate("text", x = 0,y=1, label = "Actual")
results$newx = -results$newx
library(doBy)
library(ggplot2)
library(scales)
means = summaryBy(newx ~ cc,  data = results,
FUN = function(x) { c(m = mean(x), s = stderr(x)) } ) #-mean for exp 2?
means$x = c(2,5,6,1,3,4)
means$cc <- factor(means$cc, levels = means$cc[order(-means$x)])
ggplot(data=means,aes(newx.m,cc))+
geom_point()+
geom_errorbarh(aes(xmin=newx.m-newx.s,xmax=newx.m+newx.s,height=.5))+
geom_vline(xintercept=c(0), linetype="dotted")+
theme_bw()+
ggtitle("Experiment One")+
#ggtitle("Experiment One")+
xlab("Gravity Dimension") +
ylab("Condition") +
annotate("text", x = 0,y=1, label = "Actual")
#
t.test(results[results$cc=="Forward-Up",]$newx,mu=0) #down/back |mu = 410 for exp2
stderr(results[results$cc=="Forward-Up",]$newx)
ggplot(data=means,aes(newx.m,cc))+
geom_point()+
geom_errorbarh(aes(xmin=newx.m-newx.s,xmax=newx.m+newx.s,height=.5))+
geom_vline(xintercept=c(0), linetype="dotted")+
theme_bw()+
ggtitle("Experiment Two")+
#ggtitle("Experiment One")+
xlab("Gravity Dimension") +
ylab("Condition") +
annotate("text", x = 0,y=1, label = "Actual")
t.test(results[results$cc=="Forward-Up",]$newx,mu=0) #down/back |mu = 410 for exp2
stderr(results[results$cc=="Forward-Up",]$newx)
t.test(results[results$cc=="Backward-Down",]$newx,mu=0) #down/forward |mu = 410 for exp2
stderr(results[results$cc=="Backward-Down",]$newx)
t.test(results[results$cc=="No Lang-Up",]$newx,mu=0) #up/forward |mu = 410 for exp2
stderr(results[results$cc=="No Lang-Up",]$newx)
t.test(results[results$cc=="No Lang-Down",]$newx,mu=0) #down/forward |mu = 410 for exp2
stderr(results[results$cc=="No Lang-Down",]$newx)
t.test(results[results$cc=="Forward-Down",]$newx,mu=0) #up/back |mu = 410 for exp2
stderr(results[results$cc=="Forward-Down",]$newx)
t.test(results[results$cc=="Backward-Up",]$newx,mu=0) #up/forward |mu = 410 for exp2
stderr(results[results$cc=="Backward-Up",]$newx)
32/483
aov.out = aov(rt ~ lang*dir, data=results) #trim rt
summary(aov.out)
TukeyHSD(aov.out) #simple effects tests
etaSquared(aov.out, type = 2, anova = FALSE )
aov.out = aov(rt ~ lang*dir, data=results) #trim rt
summary(aov.out)
etaSquared(aov.out, type = 2, anova = FALSE )
TukeyHSD(aov.out) #simple effects tests
aov.out = aov(conf ~ lang*dir,data=results) #trim conf
summary(aov.out)
aov.out = aov(rt ~ lang*dir, data=results) #trim rt
TukeyHSD(aov.out) #simple effects tests
aov.out = aov(rt ~ lang*dir, data=results) #trim rt
etaSquared(aov.out, type = 2, anova = FALSE )
summary(aov.out)
TukeyHSD(aov.out) #simple effects tests
mean(results[results$lang=="forward",]$rt/10) #down/back |mu = 410 for exp2
stderr(results[results$lang=="forward",]$rt/10)
mean(results[results$lang=="backward",]$rt/10) #down/back |mu = 410 for exp2
stderr(results[results$lang=="backward",]$rt/10)
mean(results[results$lang=="Null",]$rt/10) #down/back |mu = 410 for exp2
stderr(results[results$lang=="Null",]$rt/10)
mod = lm(newx~rt,results) #trim data from rt and from x
summary(mod)
aov.out = aov(conf ~ lang*dir,data=results) #trim conf
summary(aov.out)
etaSquared(aov.out, type = 2, anova = FALSE )
TukeyHSD(aov.out) #simple effects tests
summary(aov.out)
etaSquared(aov.out, type = 2, anova = FALSE )
TukeyHSD(aov.out) #simple effects tests
mean(results[results$dir=="up",]$conf)
stderr(results[results$dir=="up",]$conf)
(results[results$dir=="down",]$conf)
stderr(results[results$dir=="down",]$conf)
mean(results[results$dir=="down",]$conf)
mean(results$rt)
stderr(results$rt)
hist(results$rt)
log(results$rt)
hist(log(results$rt))
etaSquared(aov.out, type = 2, anova = FALSE )
ibrary(phia)
library(lsr)
### functions ###
stderr <- function(x) sqrt(var(x,na.rm=TRUE)/length(na.omit(x)))
deg2rad <- function(deg) {(deg * pi) / (180)}
# rm(list=ls()) #clear variables
############################################################################
############ Data loading ##################################################
############################################################################
setwd('~/Documents/projects/Vinson_etal_zwaan/Analysis/exp1/exp1_data/')
library(phia)
library(lsr)
stderr <- function(x) sqrt(var(x,na.rm=TRUE)/length(na.omit(x)))
deg2rad <- function(deg) {(deg * pi) / (180)}
setwd('~/Documents/projects/Vinson_etal_zwaan/Analysis/exp1/exp1_data/')
files <- list.files(pattern = "[.]txt$")
results = data.frame(run=1:length(files),sub=0,x=0,y=0,conf=0,rt=0,dir=0,lang=0,sent=0,xi=0,yi=0)
for (run in 1:length(files)){
print(run)
file <- read.delim(files[run], sep="\t", header=FALSE)
results[run,]$rt = tail(file)[6,2]
results[run,]$sub=as.numeric(as.character(unlist(file[2,]$V1)))
results[run,]$x=as.numeric(unlist(file[2,]$V2))
results[run,]$y=as.numeric(unlist(file[2,]$V3))
results[run,]$conf=as.numeric(unlist(file[2,]$V4))
results[run,]$lang=as.character(unlist(file[2,]$V5))
results[run,]$dir=as.character(unlist(file[2,]$V6))
results[run,]$sent=as.character(unlist(file[2,]$V7))
}
#########combined for new analysis
ex1 = results
setwd('~/Documents/projects/Vinson_etal_zwaan/Analysis/exp3/3a/')
files <- list.files(pattern = "[.]txt$")
results = data.frame(run=1:length(files),sub=0,x=0,y=0,conf=0,rt=0,dir=0,lang=0,sent=0,xi=0,yi=0)
for (run in 1:length(files)){
print(run)
file <- read.delim(files[run], sep="\t", header=FALSE)
results[run,]$rt = tail(file)[6,2]
results[run,]$sub=as.numeric(as.character(unlist(file[2,]$V1)))
results[run,]$x=as.numeric(unlist(file[2,]$V2))
results[run,]$y=as.numeric(unlist(file[2,]$V3))
results[run,]$conf=as.numeric(unlist(file[2,]$V4))
results[run,]$lang=as.character(unlist(file[2,]$V5))
results[run,]$dir=as.character(unlist(file[2,]$V6))
results[run,]$sent=as.character(unlist(file[2,]$V7))
}
ex3a = results
sumx2 = rbind(ex1,ex3a)
summary(sumx2)
results = sumx2
cv = cos(-20*pi/180)
for (i in 1:nrow(results)){
results$newx  = (results$x)/cv
}
results = results[results$rt<90000,] #remove all data that takes more than 25s to complete
upper=mean(results$rt)+(3*(sd(results$rt)))
lower=mean(results$rt)-(3*(sd(results$rt)))
test = results[results$rt<upper,]
results=test[test$rt>lower,]
upper=mean(results$conf)+(3*(sd(results$conf)))
lower=mean(results$conf)-(3*(sd(results$conf)))
test = results[results$conf<upper,]
results=test[test$conf>lower,] ##### convienent of confidence doesn't result in any dropped data.
upper=mean(results$newx)+(3*(sd(results$newx)))
lower=mean(results$newx)-(3*(sd(results$newx)))
test = results[results$newx<upper,]
results=test[test$newx>lower,]
results$newx = results$newx-(120/cv)#exp1
mean(results$rt/10)
stderr(results$rt/10)
mean(results$conf)
stderr(results$conf)
aov.out = aov(rt ~ lang*dir, data=results) #trim rt
summary(aov.out)
etaSquared(aov.out, type = 2, anova = FALSE )
mean(results[results$lang=="forward",]$rt/10) #down/back |mu = 410 for exp2
stderr(results[results$lang=="forward",]$rt/10)
mean(results[results$lang=="backward",]$rt/10) #down/back |mu = 410 for exp2
stderr(results[results$lang=="backward",]$rt/10)
mean(results[results$lang=="Null",]$rt/10) #down/back |mu = 410 for exp2
stderr(results[results$lang=="Null",]$rt/10)
mean(results[results$dir=="up",]$conf)
stderr(results[results$dir=="up",]$conf)
stderr(results[results$dir=="down",]$conf)
mean(results$conf)
stderr(results$conf)
mod = lm(newx~rt,results)
summary(mod)
mod = lm(newx~rt,results)
summary(mod)
1357+2468
