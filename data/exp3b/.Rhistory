geom_vline(xintercept=c(sum(cv[1,]*120)), linetype="dotted")+
theme_bw()+
ggtitle("Implied Gravity by Condition")+
xlab("Gravity Dimension") +
ylab("Condition") +
annotate("text", x = sum(cv[1,]*120),y=1, label = "Actual")
ggplot(data=means,aes(newx.m,cc))+
geom_point()+
geom_errorbarh(aes(xmin=newx.m-newx.s,xmax=newx.m+newx.s),height=.5)+
geom_vline(xintercept=c(sum(cv[1,]*120)), linetype="dotted",label="actual")+
theme_bw()+
ggtitle("Implied Gravity by Condition")+
xlab("Gravity Dimension") +
ylab("Condition") +
annotate("text", x = sum(cv[1,]*120),y=1, label = "Actual")
ggplot(data=means,aes(newx.m-sum(cv[1,]*120),cc))+
geom_point()+
geom_errorbarh(aes(xmin=newx.m-newx.s,xmax=newx.m+newx.s),height=.5)+
geom_vline(xintercept=c(sum(cv[1,]*120)), linetype="dotted")+
theme_bw()+
ggtitle("Implied Gravity by Condition")+
xlab("Gravity Dimension") +
ylab("Condition") +
annotate("text", x = sum(cv[1,]*120),y=1, label = "Actual")
ggplot(data=means,aes(newx.m-sum(cv[1,]*120),cc))+
geom_point()+
geom_errorbarh(aes(xmin=(newx.m-sum(cv[1,]*120))-newx.s,xmax=(newx.m-sum(cv[1,]*120))+newx.s),height=.5)+
geom_vline(xintercept=c(sum(cv[1,]*120)), linetype="dotted")+
theme_bw()+
ggtitle("Implied Gravity by Condition")+
xlab("Gravity Dimension") +
ylab("Condition") +
annotate("text", x = sum(cv[1,]*120),y=1, label = "Actual")
ggplot(data=means,aes(newx.m-sum(cv[1,]*120),cc))+
geom_point()+
geom_errorbarh(aes(xmin=(newx.m-sum(cv[1,]*120))-newx.s,xmax=(newx.m-sum(cv[1,]*120))+newx.s),height=.5)+
geom_vline(xintercept=c(0), linetype="dotted")+
theme_bw()+
ggtitle("Implied Gravity by Condition")+
xlab("Gravity Dimension") +
ylab("Condition") +
annotate("text", x = 0,y=1, label = "Actual")
results$newx-sum(cv[1,]*120)
results$newx = results$newx-sum(cv[1,]*120)
mean(results$rt/10)
stderr(results$rt/10)
mean(results$conf)
stderr(results$conf)
aov.out = aov(rt ~ lang*dir, data=results) #trim rt
summary(aov.out)
TukeyHSD(aov.out) #simple effects tests
aov.out = aov(conf ~ lang*dir,data=results) #trim conf
summary(aov.out)
mod = lm(newy~rt,results) #trim data from rt and from y
summary(mod)
mod = lm(newx~rt,results) #trim data from rt and from x
mod = lm(newx~rt,results) #trim data from rt and from x
summary(mod)
mod = lm(newx~conf,results) #trim data from conf and from x
summary(mod)
mod = lm(newx~rt*lang*dir,results) #Look for three way interaction
summary(mod)
cv[1,]
cv[1,]%*%c(120,71)
cv[1,]%*%c(120,90)
cv[1,]%*%c(120,120)
cv[1,]%*%c(120,-120)
cv[1,]
cv[1,]%*%c(results$x[i],results$y[i]
)
#run for all experiments
for (i in 1:nrow(results)){
results$newx[i]  = cv[1,]%*%c(results$x[i],results$y[i])
results$newy[i] = cv[2,]%*%c(results$x[i],results$y[i])
}
#run for all experiments
for (i in 1:nrow(results)){
results$newx[i]  = cv[1,]%*%c(results$x[i],results$y[i])
results$newy[i] = cv[2,]%*%c(results$x[i],results$y[i])
}
results$newx
plot(results$newx)
plot(results$newx,results$newy)
setwd('~/Documents/projects/Vinson_etal_zwaan/Analysis/exp1/exp1_data/')
files <- list.files(pattern = "[.]txt$")
results = data.frame(run=1:length(files),sub=0,x=0,y=0,conf=0,rt=0,dir=0,lang=0,sent=0,xi=0,yi=0)
for (run in 1:length(files)){
print(run)
file <- read.delim(files[run], sep="\t", header=FALSE)
results[run,]$rt = tail(file)[6,2]
results[run,]$sub=as.numeric(as.character(unlist(file[2,]$V1)))
results[run,]$x=as.numeric(unlist(file[2,]$V2))
results[run,]$y=as.numeric(unlist(file[2,]$V3))
results[run,]$conf=as.numeric(unlist(file[2,]$V4))
results[run,]$lang=as.character(unlist(file[2,]$V5))
results[run,]$dir=as.character(unlist(file[2,]$V6))
results[run,]$sent=as.character(unlist(file[2,]$V7))
}
#########combined for new analysis
ex1 = results
setwd('~/Documents/projects/Vinson_etal_zwaan/Analysis/exp3/3a/')
files <- list.files(pattern = "[.]txt$")
results = data.frame(run=1:length(files),sub=0,x=0,y=0,conf=0,rt=0,dir=0,lang=0,sent=0,xi=0,yi=0)
for (run in 1:length(files)){
print(run)
file <- read.delim(files[run], sep="\t", header=FALSE)
results[run,]$rt = tail(file)[6,2]
results[run,]$sub=as.numeric(as.character(unlist(file[2,]$V1)))
results[run,]$x=as.numeric(unlist(file[2,]$V2))
results[run,]$y=as.numeric(unlist(file[2,]$V3))
results[run,]$conf=as.numeric(unlist(file[2,]$V4))
results[run,]$lang=as.character(unlist(file[2,]$V5))
results[run,]$dir=as.character(unlist(file[2,]$V6))
results[run,]$sent=as.character(unlist(file[2,]$V7))
}
ex3a = results
cv= matrix(c(cos(-20*pi/180),sin(-20*pi/180), #xi
-sin(-20*pi/180),cos(-20*pi/180)), #yi
nrow=2,ncol=2,byrow = TRUE) #create socahtoha matrix
results$ny = -results$y +76.3 #move slope up.
#run for all experiments
for (i in 1:nrow(results)){
results$newx[i]  = cv[1,]%*%c(results$x[i],results$ny[i])
results$newy[i] = cv[2,]%*%c(results$x[i],results$ny[i])
}
plot(results$newx,results$newy)
results = results[results$rt<90000,] #remove all data that takes more than 25s to complete
upper=mean(results$rt)+(3*(sd(results$rt)))
lower=mean(results$rt)-(3*(sd(results$rt)))
test = results[results$rt<upper,]
results=test[test$rt>lower,]
upper=mean(results$conf)+(3*(sd(results$conf)))
lower=mean(results$conf)-(3*(sd(results$conf)))
test = results[results$conf<upper,]
results=test[test$conf>lower,] ##### convienent of confidence doesn't result in any dropped data.
upper=mean(results$newx)+(3*(sd(results$newx)))
lower=mean(results$newx)-(3*(sd(results$newx)))
test = results[results$newx<upper,]
results=test[test$newx>lower,]
upperx=mean(results$newy)+(3*(sd(results$newy)))
lowerx=mean(results$newy)-(3*(sd(results$newy)))
test2 = results[results$newy<upperx,]
results=test2[test2$newy>lowerx,]
results$ny[i]
-120+76.3
(cv[1,]%*%c(120,-43.7))
results$newx
results$newx = results$newx-(cv[1,]%*%c(120,-43.7))
t.test(results[results$cc=="Forward-Up",]$newx,mu=0) #down/back |mu = 410 for exp2
results$cc = 0
results[results$lang=="forward" & results$dir=="up",]$cc="Forward-Up"
results[results$lang=="forward" & results$dir=="down",]$cc="Forward-Down"
results[results$lang=="backward" & results$dir=="up",]$cc="Backward-Up"
results[results$lang=="backward" & results$dir=="down",]$cc="Backward-Down"
results[results$lang=="Null" & results$dir=="up",]$cc="No Lang-Up"
results[results$lang=="Null" & results$dir=="down",]$cc="No Lang-Down"
setwd('~/Documents/projects/Vinson_etal_zwaan/Analysis/exp1/exp1_data/')
files <- list.files(pattern = "[.]txt$")
results = data.frame(run=1:length(files),sub=0,x=0,y=0,conf=0,rt=0,dir=0,lang=0,sent=0,xi=0,yi=0)
for (run in 1:length(files)){
print(run)
file <- read.delim(files[run], sep="\t", header=FALSE)
results[run,]$rt = tail(file)[6,2]
results[run,]$sub=as.numeric(as.character(unlist(file[2,]$V1)))
results[run,]$x=as.numeric(unlist(file[2,]$V2))
results[run,]$y=as.numeric(unlist(file[2,]$V3))
results[run,]$conf=as.numeric(unlist(file[2,]$V4))
results[run,]$lang=as.character(unlist(file[2,]$V5))
results[run,]$dir=as.character(unlist(file[2,]$V6))
results[run,]$sent=as.character(unlist(file[2,]$V7))
}
#########combined for new analysis
ex1 = results
setwd('~/Documents/projects/Vinson_etal_zwaan/Analysis/exp3/3a/')
files <- list.files(pattern = "[.]txt$")
results = data.frame(run=1:length(files),sub=0,x=0,y=0,conf=0,rt=0,dir=0,lang=0,sent=0,xi=0,yi=0)
for (run in 1:length(files)){
print(run)
file <- read.delim(files[run], sep="\t", header=FALSE)
results[run,]$rt = tail(file)[6,2]
results[run,]$sub=as.numeric(as.character(unlist(file[2,]$V1)))
results[run,]$x=as.numeric(unlist(file[2,]$V2))
results[run,]$y=as.numeric(unlist(file[2,]$V3))
results[run,]$conf=as.numeric(unlist(file[2,]$V4))
results[run,]$lang=as.character(unlist(file[2,]$V5))
results[run,]$dir=as.character(unlist(file[2,]$V6))
results[run,]$sent=as.character(unlist(file[2,]$V7))
}
ex3a = results
sumx2 = rbind(ex1,ex3a)
summary(sumx2)
cv= matrix(c(cos(-20*pi/180),sin(-20*pi/180), #xi
-sin(-20*pi/180),cos(-20*pi/180)), #yi
nrow=2,ncol=2,byrow = TRUE) #create socahtoha matrix
results$ny = -results$y +76.3 #move slope up.
#run for all experiments
for (i in 1:nrow(results)){
results$newx[i]  = cv[1,]%*%c(results$x[i],results$ny[i])
results$newy[i] = cv[2,]%*%c(results$x[i],results$ny[i])
}
results = results[results$rt<90000,] #remove all data that takes more than 25s to complete
upper=mean(results$rt)+(3*(sd(results$rt)))
lower=mean(results$rt)-(3*(sd(results$rt)))
test = results[results$rt<upper,]
results=test[test$rt>lower,]
upper=mean(results$conf)+(3*(sd(results$conf)))
lower=mean(results$conf)-(3*(sd(results$conf)))
test = results[results$conf<upper,]
results=test[test$conf>lower,] ##### convienent of confidence doesn't result in any dropped data.
upper=mean(results$newx)+(3*(sd(results$newx)))
lower=mean(results$newx)-(3*(sd(results$newx)))
test = results[results$newx<upper,]
results=test[test$newx>lower,]
upperx=mean(results$newy)+(3*(sd(results$newy)))
lowerx=mean(results$newy)-(3*(sd(results$newy)))
test2 = results[results$newy<upperx,]
results=test2[test2$newy>lowerx,]
results$newx = results$newx-(cv[1,]%*%c(120,-43.7))
aov.out = aov(rt ~ lang*dir, data=results) #trim rt
results = sumx2
setwd('~/Documents/projects/Vinson_etal_zwaan/Analysis/exp1/exp1_data/')
files <- list.files(pattern = "[.]txt$")
results = data.frame(run=1:length(files),sub=0,x=0,y=0,conf=0,rt=0,dir=0,lang=0,sent=0,xi=0,yi=0)
for (run in 1:length(files)){
print(run)
file <- read.delim(files[run], sep="\t", header=FALSE)
results[run,]$rt = tail(file)[6,2]
results[run,]$sub=as.numeric(as.character(unlist(file[2,]$V1)))
results[run,]$x=as.numeric(unlist(file[2,]$V2))
results[run,]$y=as.numeric(unlist(file[2,]$V3))
results[run,]$conf=as.numeric(unlist(file[2,]$V4))
results[run,]$lang=as.character(unlist(file[2,]$V5))
results[run,]$dir=as.character(unlist(file[2,]$V6))
results[run,]$sent=as.character(unlist(file[2,]$V7))
}
#########combined for new analysis
ex1 = results
setwd('~/Documents/projects/Vinson_etal_zwaan/Analysis/exp3/3a/')
files <- list.files(pattern = "[.]txt$")
results = data.frame(run=1:length(files),sub=0,x=0,y=0,conf=0,rt=0,dir=0,lang=0,sent=0,xi=0,yi=0)
for (run in 1:length(files)){
print(run)
file <- read.delim(files[run], sep="\t", header=FALSE)
results[run,]$rt = tail(file)[6,2]
results[run,]$sub=as.numeric(as.character(unlist(file[2,]$V1)))
results[run,]$x=as.numeric(unlist(file[2,]$V2))
results[run,]$y=as.numeric(unlist(file[2,]$V3))
results[run,]$conf=as.numeric(unlist(file[2,]$V4))
results[run,]$lang=as.character(unlist(file[2,]$V5))
results[run,]$dir=as.character(unlist(file[2,]$V6))
results[run,]$sent=as.character(unlist(file[2,]$V7))
}
ex3a = results
sumx2 = rbind(ex1,ex3a)
summary(sumx2)
results = sumx2
cv= matrix(c(cos(-20*pi/180),sin(-20*pi/180), #xi
-sin(-20*pi/180),cos(-20*pi/180)), #yi
nrow=2,ncol=2,byrow = TRUE) #create socahtoha matrix
results$ny = -results$y +76.3 #move slope up.
#run for all experiments
for (i in 1:nrow(results)){
results$newx[i]  = cv[1,]%*%c(results$x[i],results$ny[i])
results$newy[i] = cv[2,]%*%c(results$x[i],results$ny[i])
}
plot(results$newx,results$newy)
############################################################################
results = results[results$rt<90000,] #remove all data that takes more than 25s to complete
upper=mean(results$rt)+(3*(sd(results$rt)))
lower=mean(results$rt)-(3*(sd(results$rt)))
test = results[results$rt<upper,]
results=test[test$rt>lower,]
upper=mean(results$conf)+(3*(sd(results$conf)))
lower=mean(results$conf)-(3*(sd(results$conf)))
test = results[results$conf<upper,]
results=test[test$conf>lower,] ##### convienent of confidence doesn't result in any dropped data.
upper=mean(results$newx)+(3*(sd(results$newx)))
lower=mean(results$newx)-(3*(sd(results$newx)))
test = results[results$newx<upper,]
results=test[test$newx>lower,]
upperx=mean(results$newy)+(3*(sd(results$newy)))
lowerx=mean(results$newy)-(3*(sd(results$newy)))
test2 = results[results$newy<upperx,]
results=test2[test2$newy>lowerx,]
results$newx-(cv[1,]%*%c(120,-43.7))
results$newx = results$newx-(cv[1,]%*%c(120,-43.7))
results$cc = 0
results[results$lang=="forward" & results$dir=="up",]$cc="Forward-Up"
results[results$lang=="forward" & results$dir=="down",]$cc="Forward-Down"
results[results$lang=="backward" & results$dir=="up",]$cc="Backward-Up"
results[results$lang=="backward" & results$dir=="down",]$cc="Backward-Down"
results[results$lang=="Null" & results$dir=="up",]$cc="No Lang-Up"
results[results$lang=="Null" & results$dir=="down",]$cc="No Lang-Down"
t.test(results[results$cc=="Forward-Up",]$newx,mu=0) #down/back |mu = 410 for exp2
stderr(results[results$cc=="Forward-Up",]$newx,mu=0)
stderr(results[results$cc=="Forward-Up",]$newx)
t.test(results[results$cc=="Forward-Down",]$newx,mu=sum(cv[1,]*120)) #up/back |mu = 410 for exp2
t.test(results[results$cc=="Backward-Down",]$newx,mu=sum(cv[1,]*120)) #down/forward |mu = 410 for exp2
t.test(results[results$cc=="Forward-Down",]$newx,mu=0) #up/back |mu = 410 for exp2
t.test(results[results$cc=="Null-Down",]$newx,mu=0) #down/forward |mu = 410 for exp2
t.test(results[results$cc=="No Lang-Down",]$newx,mu=0) #down/forward |mu = 410 for exp2
t.test(results[results$cc=="No Lang-Up",]$newx,mu=0) #up/forward |mu = 410 for exp2
t.test(results[results$cc=="Backward-Down",]$newx,mu=0) #down/forward |mu = 410 for exp2
t.test(results[results$cc=="Backward-Up",]$newx,mu=0) #up/forward |mu = 410 for exp2
t.test(results[results$cc=="Forward-Down",]$newx,mu=0) #up/back |mu = 410 for exp2
library(doBy)
library(ggplot2)
library(scales)
means = summaryBy(newx ~ cc,  data = results,
FUN = function(x) { c(m = mean(x), s = stderr(x)) } )
means$x = c(2,5,6,1,3,4)
means$cc <- factor(means$cc, levels = means$cc[order(-means$x)])
ggplot(data=means,aes(newx.m-sum(cv[1,]*120),cc))+
geom_point()+
geom_errorbarh(aes(xmin=(newx.m-sum(cv[1,]*120))-newx.s,xmax=(newx.m-sum(cv[1,]*120))+newx.s),height=.5)+
geom_vline(xintercept=c(0), linetype="dotted")+
theme_bw()+
ggtitle("Implied Gravity by Condition")+
xlab("Gravity Dimension") +
ylab("Condition") +
annotate("text", x = 0,y=1, label = "Actual")
ggplot(data=means,aes(newx.m,cc))+
geom_point()+
geom_errorbarh(aes(xmin=(newx.m-sum(cv[1,]*120))-newx.s,xmax=(newx.m-sum(cv[1,]*120))+newx.s),height=.5)+
geom_vline(xintercept=c(0), linetype="dotted")+
theme_bw()+
ggtitle("Implied Gravity by Condition")+
xlab("Gravity Dimension") +
ylab("Condition") +
annotate("text", x = 0,y=1, label = "Actual")
ggplot(data=means,aes(newx.m,cc))+
geom_point()+
geom_errorbarh(aes(xmin=(newx.m)-newx.s,xmax=(newx.m-sum(cv[1,]*120))+newx.s),height=.5)+
geom_vline(xintercept=c(0), linetype="dotted")+
theme_bw()+
ggtitle("Implied Gravity by Condition")+
xlab("Gravity Dimension") +
ylab("Condition") +
annotate("text", x = 0,y=1, label = "Actual")
ggplot(data=means,aes(newx.m,cc))+
geom_point()+
geom_errorbarh(aes(xmin=newx.m-newx.s,xmax=newx.m+newx.s,height=.5)+
geom_vline(xintercept=c(0), linetype="dotted")+
theme_bw()+
ggtitle("Implied Gravity by Condition")+
xlab("Gravity Dimension") +
ylab("Condition") +
annotate("text", x = 0,y=1, label = "Actual")
annotate("text", x = 0,y=1, label = "Actual")
ggplot(data=means,aes(newx.m,cc))+
geom_point()+
geom_errorbarh(aes(xmin=newx.m-newx.s,xmax=newx.m+newx.s,height=.5)+
geom_vline(xintercept=c(0), linetype="dotted")+
theme_bw()+
ggtitle("Implied Gravity by Condition")+
xlab("Gravity Dimension") +
ylab("Condition") +
annotate("text", x = 0,y=1, label = "Actual")
geom_errorbarh(aes(xmin=newx.m-newx.s,xmax=newx.m+newx.s,height=.5))+
ggplot(data=means,aes(newx.m,cc))+
geom_point()+
geom_errorbarh(aes(xmin=newx.m-newx.s,xmax=newx.m+newx.s,height=.5))+
geom_vline(xintercept=c(0), linetype="dotted")+
theme_bw()+
ggtitle("Implied Gravity by Condition")+
xlab("Gravity Dimension") +
ylab("Condition") +
annotate("text", x = 0,y=1, label = "Actual")
ggplot(data=means,aes(newx.m,cc))+
geom_point()+
geom_errorbarh(aes(xmin=newx.m-newx.s,xmax=newx.m+newx.s,height=.5))+
geom_vline(xintercept=c(0), linetype="dotted")+
theme_bw()+
ggtitle("Experiment One")+
xlab("Gravity Dimension") +
ylab("Condition") +
annotate("text", x = 0,y=1, label = "Actual")
aov.out = aov(newx ~ lang*dir,data=results) #trim x
summary(aov.out)
etaSquared(aov.out, type = 2, anova = FALSE )
TukeyHSD(aov.out) #simple effects tests
rm(list=ls()) #clear variables
library(phia)
library(lsr)
### functions ###
stderr <- function(x) sqrt(var(x,na.rm=TRUE)/length(na.omit(x)))
deg2rad <- function(deg) {(deg * pi) / (180)}
setwd('~/Documents/projects/Vinson_etal_zwaan/Analysis/exp2/exp2_data/')
files <- list.files(pattern = "[.]txt$")
results = data.frame(run=1:length(files),sub=0,x=0,y=0,conf=0,rt=0,dir=0,lang=0,sent=0,xi=0,yi=0)
for (run in 1:length(files)){
print(run)
file <- read.delim(files[run], sep="\t", header=FALSE)
results[run,]$rt = tail(file)[6,2]
results[run,]$sub=as.numeric(as.character(unlist(file[2,]$V1)))
results[run,]$x=as.numeric(unlist(file[2,]$V2))
results[run,]$y=as.numeric(unlist(file[2,]$V3))
results[run,]$conf=as.numeric(unlist(file[2,]$V4))
results[run,]$lang=as.character(unlist(file[2,]$V5))
results[run,]$dir=as.character(unlist(file[2,]$V6))
results[run,]$sent=as.character(unlist(file[2,]$V7))
}
#########combined for new analysis
ex1 = results
setwd('~/Documents/projects/Vinson_etal_zwaan/Analysis/exp3/3b/')
files <- list.files(pattern = "[.]txt$")
results = data.frame(run=1:length(files),sub=0,x=0,y=0,conf=0,rt=0,dir=0,lang=0,sent=0,xi=0,yi=0)
for (run in 1:length(files)){
print(run)
file <- read.delim(files[run], sep="\t", header=FALSE)
results[run,]$rt = tail(file)[6,2]
results[run,]$sub=as.numeric(as.character(unlist(file[2,]$V1)))
results[run,]$x=as.numeric(unlist(file[2,]$V2))
results[run,]$y=as.numeric(unlist(file[2,]$V3))
results[run,]$conf=as.numeric(unlist(file[2,]$V4))
results[run,]$lang=as.character(unlist(file[2,]$V5))
results[run,]$dir=as.character(unlist(file[2,]$V6))
results[run,]$sent=as.character(unlist(file[2,]$V7))
}
ex3a = results
sumx2 = rbind(ex1,ex3a)
summary(sumx2)
results = sumx2
cv= matrix(c(cos(20*pi/180),sin(20*pi/180),
-sin(20*pi/180),cos(20*pi/180)),
nrow=2,ncol=2,byrow = TRUE)
results$ny = -results$y +169.22
cv[1,]%*%c(410,-120)
cv[1,]%*%c(410,120)
#run for all experiments
for (i in 1:nrow(results)){
results$newx[i]  = cv[1,]%*%c(results$x[i],results$ny[i])
results$newy[i] = cv[2,]%*%c(results$x[i],results$ny[i])
}
plot(results$newx,results$newy)
results$ny
results$y
-results$y +169.22
plot(results$x,results$ny)
plot(results$newx,results$newy)
results = results[results$rt<90000,] #remove all data that takes more than 25s to complete
upper=mean(results$rt)+(3*(sd(results$rt)))
lower=mean(results$rt)-(3*(sd(results$rt)))
test = results[results$rt<upper,]
results=test[test$rt>lower,]
upper=mean(results$conf)+(3*(sd(results$conf)))
lower=mean(results$conf)-(3*(sd(results$conf)))
test = results[results$conf<upper,]
results=test[test$conf>lower,] ##### convienent of confidence doesn't result in any dropped data.
upper=mean(results$newx)+(3*(sd(results$newx)))
lower=mean(results$newx)-(3*(sd(results$newx)))
test = results[results$newx<upper,]
results=test[test$newx>lower,]
upperx=mean(results$newy)+(3*(sd(results$newy)))
lowerx=mean(results$newy)-(3*(sd(results$newy)))
test2 = results[results$newy<upperx,]
results=test2[test2$newy>lowerx,]
-120++169.22
cv[1,]%*%c(410,49.22)
results$newx = results$newx-(cv[1,]%*%c(410,49.22)) #exp2
mean(results$rt/10)
stderr(results$rt/10)
mean(results$conf)
stderr(results$conf)
aov.out = aov(rt ~ lang*dir, data=results) #trim rt
summary(aov.out)
aov.out = aov(conf ~ lang*dir,data=results) #trim conf
summary(aov.out)
aov.out = aov(newy ~ lang*dir, data=results) #trim y
aov.out = aov(newx ~ lang*dir,data=results) #trim x
summary(aov.out)
etaSquared(aov.out, type = 2, anova = FALSE )
TukeyHSD(aov.out) #simple effects tests
results$cc = 0
results[results$lang=="forward" & results$dir=="up",]$cc="Forward-Up"
results[results$lang=="forward" & results$dir=="down",]$cc="Forward-Down"
results[results$lang=="backward" & results$dir=="up",]$cc="Backward-Up"
results[results$lang=="backward" & results$dir=="down",]$cc="Backward-Down"
results[results$lang=="Null" & results$dir=="up",]$cc="No Lang-Up"
results[results$lang=="Null" & results$dir=="down",]$cc="No Lang-Down"
t.test(results[results$cc=="Forward-Up",]$newx,mu=0) #down/back |mu = 410 for exp2
library(doBy)
library(ggplot2)
library(scales)
means = summaryBy(newx ~ cc,  data = results,
FUN = function(x) { c(m = mean(x), s = stderr(x)) } )
means$x = c(2,5,6,1,3,4)
means$cc <- factor(means$cc, levels = means$cc[order(-means$x)])
ggplot(data=means,aes(newx.m,cc))+
geom_point()+
geom_errorbarh(aes(xmin=newx.m-newx.s,xmax=newx.m+newx.s,height=.5))+
geom_vline(xintercept=c(0), linetype="dotted")+
theme_bw()+
ggtitle("Experiment One")+
xlab("Gravity Dimension") +
ylab("Condition") +
annotate("text", x = 0,y=1, label = "Actual")
means = summaryBy(newx ~ cc,  data = results,
FUN = function(x) { c(m = -mean(x), s = stderr(x)) } )
means$x = c(2,5,6,1,3,4)
means$cc <- factor(means$cc, levels = means$cc[order(-means$x)])
ggplot(data=means,aes(newx.m,cc))+
geom_point()+
geom_errorbarh(aes(xmin=newx.m-newx.s,xmax=newx.m+newx.s,height=.5))+
geom_vline(xintercept=c(0), linetype="dotted")+
theme_bw()+
ggtitle("Experiment Two")+
#ggtitle("Experiment One")+
xlab("Gravity Dimension") +
ylab("Condition") +
annotate("text", x = 0,y=1, label = "Actual")
cv[1,]%*%c(410,49.22)
